// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String           @id @default(cuid())
  email         String          @unique
  password      String
  role          UserRole        @default(USER)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  forms         Form[]          @relation("CreatedForms")
  submissions   FormSubmission[]
}

model Form {
  id            String           @id @default(cuid())
  title         String
  description   String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  createdBy     User            @relation("CreatedForms", fields: [creatorId], references: [id])
  creatorId     String
  fields        FormField[]
  submissions   FormSubmission[]
}

model FormField {
  id            String    @id @default(cuid())
  type          String    // text, textarea, select, checkbox, etc.
  label         String
  description   String?
  placeholder   String?
  required      Boolean   @default(false)
  disabled      Boolean   @default(false)
  className     String?
  options       Json?     // Store options as JSON array
  validation    Json?     // Store validation rules as JSON
  tableData     Json?     // Store table data as JSON
  order         Int
  form          Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  formId        String
}

model FormSubmission {
  id            String    @id @default(cuid())
  form          Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  formId        String
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  responses     Json      // Store form responses as JSON
  submittedAt   DateTime  @default(now())
} 